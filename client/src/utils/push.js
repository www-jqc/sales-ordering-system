// This key needs to be generated by running `npx web-push generate-vapid-keys`
const VAPID_PUBLIC_KEY = 'BEORaUJmKDhIgbFfeYZa6F_z4YSSTauiYr52UHEM5fWErTVrKyn7Aqaww3BBUydG4U6XTidhh_EkqEqMy6wS2Es';

/**
 * Converts a base64 string to a Uint8Array.
 * This is needed to subscribe to push notifications.
 * @param {string} base64String
 * @returns {Uint8Array}
 */
function urlBase64ToUint8Array(base64String) {
  const padding = '='.repeat((4 - base64String.length % 4) % 4);
  const base64 = (base64String + padding)
    .replace(/-/g, '+')
    .replace(/_/g, '/');

  const rawData = window.atob(base64);
  const outputArray = new Uint8Array(rawData.length);

  for (let i = 0; i < rawData.length; ++i) {
    outputArray[i] = rawData.charCodeAt(i);
  }
  return outputArray;
}

/**
 * Subscribes the user to push notifications and sends the subscription to the server.
 */
export async function subscribeUserToPush() {
  if (!('serviceWorker' in navigator) || !('PushManager' in window)) {
    console.warn('Push messaging is not supported');
    return;
  }

  try {
    const registration = await navigator.serviceWorker.ready;
    let subscription = await registration.pushManager.getSubscription();

    if (subscription) {
      console.log('User is already subscribed.');
      return;
    }

    const permission = await window.Notification.requestPermission();
    if (permission !== 'granted') {
      console.warn('Permission for notifications was denied');
      return;
    }

    subscription = await registration.pushManager.subscribe({
      userVisibleOnly: true,
      applicationServerKey: urlBase64ToUint8Array(VAPID_PUBLIC_KEY),
    });

    console.log('New push subscription:', subscription);

    // TODO: Send the subscription to your server
    await fetch('/api/push/subscribe', {
      method: 'POST',
      body: JSON.stringify(subscription),
      headers: {
        'Content-Type': 'application/json',
        // You might need to include an authorization header
      },
    });

    console.log('Push subscription sent to server.');
  } catch (error) {
    console.error('Failed to subscribe the user: ', error);
  }
} 